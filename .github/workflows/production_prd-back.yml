name: Build and deploy Next.js or FastAPI app to Azure Web App

on:
  push:
    branches:
      - production
      - staging
      - development
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Determine environment
        id: env-setup
        run: |
          if [[ $GITHUB_REF == 'refs/heads/production' ]]; then
            echo "env=production" >> $GITHUB_ENV
            echo "NEXT_PUBLIC_URL=${{ secrets.PROD_NEXT_PUBLIC_URL }}" >> $GITHUB_ENV
            echo "AZURE_FRONTEND_APP_NAME=${{ secrets.PROD_AZURE_FRONTEND_APP_NAME }}" >> $GITHUB_ENV
            echo "AZURE_BACKEND_APP_NAME=${{ secrets.PROD_AZURE_BACKEND_APP_NAME }}" >> $GITHUB_ENV
            echo "AZURE_FRONTEND_PUBLISH_PROFILE=${{ secrets.PROD_AZURE_FRONTEND_PUBLISH_PROFILE }}" >> $GITHUB_ENV
            echo "AZURE_BACKEND_PUBLISH_PROFILE=${{ secrets.PROD_AZURE_BACKEND_PUBLISH_PROFILE }}" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == 'refs/heads/staging' ]]; then
            echo "env=staging" >> $GITHUB_ENV
            echo "NEXT_PUBLIC_URL=${{ secrets.STAGING_NEXT_PUBLIC_URL }}" >> $GITHUB_ENV
            echo "AZURE_FRONTEND_APP_NAME=${{ secrets.STAGING_AZURE_FRONTEND_APP_NAME }}" >> $GITHUB_ENV
            echo "AZURE_BACKEND_APP_NAME=${{ secrets.STAGING_AZURE_BACKEND_APP_NAME }}" >> $GITHUB_ENV
            echo "AZURE_FRONTEND_PUBLISH_PROFILE=${{ secrets.STAGING_AZURE_FRONTEND_PUBLISH_PROFILE }}" >> $GITHUB_ENV
            echo "AZURE_BACKEND_PUBLISH_PROFILE=${{ secrets.STAGING_AZURE_BACKEND_PUBLISH_PROFILE }}" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == 'refs/heads/development' ]]; then
            echo "env=development" >> $GITHUB_ENV
            echo "NEXT_PUBLIC_URL=${{ secrets.DEV_NEXT_PUBLIC_URL }}" >> $GITHUB_ENV
            echo "AZURE_FRONTEND_APP_NAME=${{ secrets.DEV_AZURE_FRONTEND_APP_NAME }}" >> $GITHUB_ENV
            echo "AZURE_BACKEND_APP_NAME=${{ secrets.DEV_AZURE_BACKEND_APP_NAME }}" >> $GITHUB_ENV
            echo "AZURE_FRONTEND_PUBLISH_PROFILE=${{ secrets.DEV_AZURE_FRONTEND_PUBLISH_PROFILE }}" >> $GITHUB_ENV
            echo "AZURE_BACKEND_PUBLISH_PROFILE=${{ secrets.DEV_AZURE_BACKEND_PUBLISH_PROFILE }}" >> $GITHUB_ENV
          fi
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> $GITHUB_ENV

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Set up Python version
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies (Next.js)
        run: |
          cd app
          npm install

      - name: Install dependencies (FastAPI)
        run: |
          cd api
          pip install -r requirements.txt

      - name: Build the Next.js project
        run: |
          cd app
          npm run build
        env:
          NEXT_PUBLIC_URL: ${{ env.NEXT_PUBLIC_URL }}
          NEXTAUTH_SECRET: ${{ env.NEXTAUTH_SECRET }}

      - name: Prepare deployment artifacts (Next.js)
        run: |
          cd app
          mkdir -p deploy
          cp -r ./.next/standalone/. ./deploy
          cp -r ./public ./deploy
          cp -r ./.next/static ./deploy/.next/static
          cp ./package.json ./deploy
          cp ./package-lock.json ./deploy

      - name: Zip deployment artifacts (Next.js)
        run: |
          cd app
          zip -r release.zip deploy

      - name: Prepare deployment artifacts for FastAPI
        run: |
          cd api
          mkdir -p deploy
          shopt -s extglob
          cp -r !(deploy|.git|__pycache__) deploy/
        
      - name: Zip FastAPI artifacts
        run: |
          cd api
          zip -r release.zip deploy
        
      - name: Upload Next.js deployment artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: app/release.zip

      - name: Upload FastAPI deployment artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fastapi-app
          path: api/release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Next.js deployment artifacts
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Download FastAPI deployment artifacts
        uses: actions/download-artifact@v4
        with:
          name: fastapi-app

      - name: List directory structure and check for ZIP file
        run: |
          ls -alR  # ディレクトリの階層構造を再帰的にリスト表示
          ls -al app/release.zip  # 指定された場所にZIPファイルが存在するか確認
          ls -al api/release.zip  # 指定された場所にZIPファイルが存在するか確認
        

      - name: Unzip Next.js deployment artifacts
        run: unzip -o app/release.zip -d nextjs_deploy

      - name: Unzip FastAPI deployment artifacts
        run: unzip -o api/release.zip -d fastapi_deploy
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Azure Web App Name for Frontend and Backend
        id: set-app-names
        run: |
          if [[ $GITHUB_REF == 'refs/heads/production' ]]; then
            echo "AZURE_FRONTEND_APP_NAME=${{ secrets.PROD_AZURE_FRONTEND_APP_NAME }}" >> $GITHUB_ENV
            echo "AZURE_BACKEND_APP_NAME=${{ secrets.PROD_AZURE_BACKEND_APP_NAME }}" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == 'refs/heads/staging' ]]; then
            echo "AZURE_FRONTEND_APP_NAME=${{ secrets.STAGING_AZURE_FRONTEND_APP_NAME }}" >> $GITHUB_ENV
            echo "AZURE_BACKEND_APP_NAME=${{ secrets.STAGING_AZURE_BACKEND_APP_NAME }}" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == 'refs/heads/development' ]]; then
            echo "AZURE_FRONTEND_APP_NAME=${{ secrets.DEV_AZURE_FRONTEND_APP_NAME }}" >> $GITHUB_ENV
            echo "AZURE_BACKEND_APP_NAME=${{ secrets.DEV_AZURE_BACKEND_APP_NAME }}" >> $GITHUB_ENV
          fi

      - name: Wait before deploying
        run: sleep 20s  # 20秒の遅延を追加
      
      - name: Deploy to Azure Web App (Next.js)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_FRONTEND_APP_NAME }}
          slot-name: 'Production'
          package: nextjs_deploy
          publish-profile: ${{ env.AZURE_FRONTEND_PUBLISH_PROFILE }}

      - name: Deploy FastAPI app to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_BACKEND_APP_NAME }}
          slot-name: 'Production'
          package: fastapi_deploy
          publish-profile: ${{ env.AZURE_BACKEND_PUBLISH_PROFILE }}
